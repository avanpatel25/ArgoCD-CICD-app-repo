#################################################
# MAINTAINED BY: SHIVAM
#################################################

name: ArgoCD CI Pipeline 
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - test
  pull_request:
    branches:
      - main
      - test
env:     
  IMAGE: mywebsite
  DOCKERHUB_USERNAME: avanpatel25 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9",]

    steps:
      - name: code Checkout
        uses: actions/checkout@v3
        with:
           fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

#       #STEP 1 python install

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
#       #STEP 2 Pytest        
      - name: Test with pytest
        run: |
          pytest --cov=main test_main.py --junitxml=./output.xml 
          python3 -m coverage xml
          ls
          cat coverage.xml
          pwd
#       #STEP 3 Lint
      - name: Linting
        run: |
          find . -name \*.py | xargs pylint -f parseable | tee pylint.log


#       #STEP 4 Dockerhub login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#       #STEP 5 Build and Push
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{env.DOCKERHUB_USERNAME}}/${{env.IMAGE}}:${{github.run_number}} 



      # - name: kuberntest manifest
      #   run: |
      #     sed -i 's/mywebsite:latest/mywebsite:${{github.run_number}}/g' ${{ github.workspace }}/k8s/deployment.yaml

#       #STEP 6  Invoke deployment action     
      - name: Invoke deployment GitOps pipe
        run: |
          curl -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{secrets.API_TOKEN_GITHUB}}" \
          --request POST \
          --data '{"event_type": "update-deployment", "client_payload": { "buildnumber": "'"${{github.run_number}}"'" }}' \
          https://api.github.com/repos/shivam779823/argocd-deployment/dispatches
